name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  changed_files:
    name: Get changed files
    timeout-minutes: 1
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      matrix: ${{ steps.changed_files.outputs.all_changed_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get changed tex files
        id: changed_files
        uses: tj-actions/changed-files@v45
        with:
          files: "./*.tex"
          use_rest_api: "true"
          matrix: "true"

  build_latex:
    name: Build LaTeX
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: changed_files
    strategy:
      matrix:
        files: ${{ fromJson(needs.changed_files.outputs.matrix) }}
    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v3
        with:
          root_file: ${{ matrix.files }}

      - name: Convert Filename
        id: convert_filename
        run: |
          tex_file="${{ matrix.files }}"
          name_file="${tex_file%.tex}"
          pdf_file="${name_file}.pdf"
          echo "name_file=$name_file" >> $GITHUB_ENV
          echo "pdf_file=$pdf_file" >> $GITHUB_ENV

      - name: Upload PDF as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.name_file }}
          path: ${{ env.pdf_file }}

  comment_pr:
    name: Comment on Pull Request with PDF Links
    runs-on: ubuntu-latest
    needs: build_latex
    permissions:
      pull-requests: write
      actions: read
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Artifact URLs
        id: get_artifact_urls
        run: |
          ARTIFACTS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")

          echo "$ARTIFACTS" | jq '.'

          artifact_urls=$(echo "$ARTIFACTS" | jq -r '[.artifacts[] | "\(.name)\t\(.archive_download_url)"] | join("\n")')

          echo "artifact_urls<<EOF" >> $GITHUB_ENV
          echo "$artifact_urls" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Comment on Pull Request with PDF Links
        uses: actions/github-script@v6
        env:
          ARTIFACT_URLS: ${{ env.artifact_urls }}
        with:
          script: |
            const { context, github } = require('@actions/github');
            const artifactUrls = process.env.ARTIFACT_URLS.split('\n').map(line => {
              const [name, id] = line.split('\t');
              const url = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${process.env.RUN_ID}/artifacts/${id}`;
              return { name: name?.trim(), url: url?.trim() };
            }).filter(artifact => artifact.name && artifact.url);

            const commentBody = artifactUrls
              .map(artifact => `- [${artifact.name}](${artifact.url})`)
              .join('\n');

            if (commentBody) {
              const issueNumber = context.payload.pull_request?.number || context.issue.number;
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `### Documents affected by this PR\n${commentBody}`
              });
            } else {
              console.log('No valid artifact URLs found.');
            }
